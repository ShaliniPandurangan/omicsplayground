#!/usr/bin/env Rscript

##
## Make PGX file from CSV files
##
## (c) 2023 BigOmics Analytics 
##

browser()

library(playbase)

# Parse command-line arguments
args <- commandArgs(trailingOnly = TRUE)
temp_folder <- args[1] # Temporary folder name
path_to_counts <- file.path(temp_folder, args[2])
path_to_samples <- file.path(temp_folder, args[3])
path_to_contrasts <- file.path(temp_folder, args[4])
path_to_output <- file.path(temp_folder, args[5])
batch.correct <- as.logical(args[6])
prune.samples <- as.logical(args[7])
filter.genes <- args[8]
only.known <- as.logical(args[9])
only.proteincoding <- as.logical(args[10])
only.hugo <- as.logical(args[11])
convert.hugo <- as.logical(args[12])
do.cluster <- as.logical(args[13])
cluster.contrasts <- as.logical(args[14])

# Create temporary folder
temp_dir <- file.path("C:/code/omicsplayground/data", temp_folder)
dir.create(temp_dir)

# Copy input files to temporary folder
file.copy(args[2:4], temp_dir)

# Load input data
counts <- read.csv(path_to_counts, header = TRUE, row.names = 1)
samples <- read.csv(path_to_samples, header = TRUE, row.names = 1)
contrasts <- read.csv(path_to_contrasts, header = TRUE, row.names = 1)

# Call create_pgx function
ngs <- playbase::create_pgx(
  counts = counts,
  samples = samples,
  contrasts = contrasts,
  X = NULL,
  batch.correct = batch.correct,
  prune.samples = prune.samples,
  filter.genes = filter.genes,
  only.chrom = FALSE,
  rik.orf = !FALSE,
  only.known = only.known,
  only.proteincoding = only.proteincoding,
  only.hugo = only.hugo,
  convert.hugo = convert.hugo,
  do.cluster = do.cluster,
  cluster.contrasts = cluster.contrasts
)

# Save output to a CSV file
write.csv(ngs, path_to_output, row.names = TRUE)

# Remove temporary files
unlink(file.path(temp_dir, args[2:4]))